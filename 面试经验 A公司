1、什么场景下使用多线程？
当时回答是需要处理大量数据时候使用多线程
后来百度之后进行补充
1）程序遇到阻塞，而不想程序一直等待
2）系统接收多用户多请求时候，应该使用多线程
3）比如多任务后台程序等

2、说说设计模式
  回答得不是很好，说明理解还是不行，今天晚上温故一下单例模式、桥接模式、观察者模式、装饰模式、适配器模式、抽象工厂模式

3、面向对象设计的理解
   这个也回答得不好，当时回答就是面向对象就是对抽象对象。
   在知乎网上找了一个很完美的答案：
   
   “假设我是女娲，我准备捏一些人， 
   首先，人应该有哪些基本特征：1.有四肢 2.有大脑 3.有器官 4.有思想 我们就有了第一个模型，这就是抽象。
   
   其次，我和西方上帝是好友，我想我的这个想法能够提供给他用，但是我不想让他知道里面细节是怎么捏出来的，用的什么材料，
   他也不用考虑那么多，只要告诉我他要捏什么样的人就可以了。这就是封装。
   
   然后，我之后创造的人都以刚才的抽象的模型做为模板，我创造的人都有我模型的特征  这就是继承。
   最后，我觉得为了让人更丰富多彩，暗合阴阳之原理，可以根据模型进行删减，某些人上半身器官多突起那么一丢丢，
   下面少那么一丢丢。某些人，下半身多突起那么一丢丢。这就是多态。嘿嘿，当然为了，更丰富多彩，
   那么一丢丢大小也是可以有区别的。。。” 
   此时，面试官要是男的你可以露出你懂得的表情！
    
    作者：陈震
    链接：https://www.zhihu.com/question/32085928/answer/55487957
    来源：知乎
    著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
    
4、接口与抽象类的区别

   抽象 关注于这个对象是什么，直指对象的本质
   接口 关注于这个对象能做什么

   1）接口的设计目的，是对类的行为进行约束（更准确的说是一种“有”约束，因为接口不能规定类不可以有什么行为），
   也就是提供一种机制， 可以强制要求不同的类具有相同的行为。它只约束了行为的有无，但不对如何实现行为进行限制。
   
   2）而抽象类的设计目的，是代码复用。当不同的类具有某些相同的行为(记为行为集合A)，
   且其中一部分行为的实现方式一致时（A的非真子集，记为B），可以让这些类都派生于一个抽象类。
   在这个抽象类中实现了B，避免让所有的子类来实现B，这就达到了代码复用的目的。
   而A减B的部分，留给各个子类自己实现。正是因为A-B在这里没有实现，所以抽象类不允许实例化出来（否则当调用到A-B时，无法执行）。

5、垃圾回收机制
